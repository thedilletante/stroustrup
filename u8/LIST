l1 	*2.5	Напишите модуль, реализующий двусвязный список элементов типа string в стиле
			модуля Stack из 2.4. Проверьте его на списке названий языков программирования.
			Реализуйте функцию sort() для этого списка и функцию, изменяющую порядок
			элементов списка на обратный.

l2	*2		Возьмите не слишком большую программу, которая использует по крайней мере
			одну библиотеку, не применяющую пространств имен. Модифицируйте программу,
			чтобы в ней использовалось пространство имен для этой библиотеки.

l3	*2		Реализуйте программу калькулятор в виде модуля в стиле 2.4, используя
			пространства имен. Не применяйте директивы using.

l4	*1		Напишите программу, которая генерирует исключение в одной функции, а
			перехватывает его в другой.

l5	*2		Напишите программу с функциями, вызывающими друг друга с глубиной вложенности,
			равной 10. Снабдите каждую функцию аргументом, сообщающим уровень вложенности,
			на котором произошла генерация исключения. Заставьте функцию main() перехватывать
			исключение и выводить информацию о нем. Не забудьте случай, когда исключение
			перехватывается в той же самой функции, где оно генерируется.

l8	*2		Напишите функцию, которая в зависимости от аргумента либо возвращает некоторое
			значение, либо генерирует исключение в виде объекта, имеющего это же значение.
			Замерьте разницу во времени исполнения этих двух вариантов.

l9	*2		Модифицируйте версию калькулятора из 8.3 так, чтобы использовались
			исключения.

l10	*2.5	Напишите функции plus(), minus(), multiply(), divide(), контролирующие
			переполнения (и потерю точности) и генерирующие исключения в этих случаях.

l11	*2		Модифицируйте программу калькулятора так, чтобы она использовала функции из 8.10